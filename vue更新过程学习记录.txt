在父组件里使用子组件，父组件更新会生成新的vnode，子组件对应的vnode也会重新生成，只是子组件内部的vnode需要根据自身的data和props判断要不要重新生成
在父组件层进行diff时，如果vnode是组件，则会执行prepatch，prepatch会调用updateChildComponent，updateChildComponent里面会处理更新，props，listens和solt，子组件是否更新需要根据props和data是否变化决定

h方法调用过程
组件：
单文件组件会被编译成一个包含render方法的对象，类似下面
{
name: xxx,
render: function() {}
}
当creatElementVnode方法传入组件时，首先会生成组件的vnode，后续拆箱中如果vnode是组件类型则会先生成组件实例instance，然后调用render方法生成该组件的子级vnode：subTree挂在instance上，然后调用patch方法传入subTree继续拆箱。

普通节点：
直接生成自身的vnode
