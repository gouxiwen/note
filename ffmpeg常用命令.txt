ffmpeg一般会安装三个命令
ffmpeg  转码与封装等

ffmpeg -i input.png -vcodec qtrle movie_with_alpha.mov
生成的视频的限速格式pix_fmt是 argb，则表示是有带透明通道的视频（未验证，需要在苹果系统上验证）
QTRle是QuickTime视频格式中的一种RLE（Run Length Encoding，运行长度编码）压缩算法。它主要用于减少视频中的冗余数据，特别是对静态图像的压缩效果更好，只能封装为mov
ffmpeg -i input.png -vcodec vp9 webm_with_alpha.webm
生成的视频有Metadata:{alpha_mode:1}，则表示是有带透明通道的视频
vp9只能封装为webm

ffplay 播放
ffplay -i xxx.webm -x 900 -y 1600

ffprobe  查看视频信息
ffprobe -i xxx.webm -show_streams -show_format
show_streams 查看视频流信息
show_format  查看封装信息

参考：https://zhuanlan.zhihu.com/p/684158932

视频封装格式（Video Container Format）和视频编码格式（Video Compression Format）是两个不同但相关的概念，它们一起构成了数字视频文件的结构。

视频封装格式（Video Container Format）
视频封装格式是一种文件格式，用于封装多媒体数据，包括视频、音频、字幕、元数据等。它的作用是将这些不同类型的媒体数据组合到一个单一的文件中，以便播放器或解码器可以识别和处理它们。

视频封装格式通常包括文件头（Header）和多个媒体流（如视频流、音频流、字幕流等）。它们还可以包含文件级别的元数据，如文件大小、时长、制作日期等信息。
一些常见的视频封装格式包括MP4（MPEG-4 Part 14）、MKV（Matroska）、AVI（Audio Video Interleave）、MOV（QuickTime File Format）等。

视频编码格式（Video Compression Format）
视频编码格式是一种压缩技术，用于减小视频文件的大小，同时保持足够的视觉质量。视频编码将视频帧进行压缩和编码，以减少数据量，从而降低存储需求和传输带宽。
不同的视频编码格式使用不同的压缩算法，如H.264、H.265（HEVC）、VP9、AVC、MPEG-2等。这些编码格式可以在编码时设置不同的参数，以权衡视频质量和文件大小。
视频编码格式通常定义了如何对视频帧进行编码和解码，以及如何处理压缩数据。

两者关系
视频封装格式和视频编码格式之间有密切的关系，因为视频文件通常包含一个视频流（使用视频编码格式进行压缩）以及可能的音频和其他媒体流。视频封装格式的任务是将这些不同类型的媒体数据组合到一个文件中，并定义如何存储和排列它们，以便播放器或解码器能够正确解析和播放这些数据

不同的封装格式支持对于的编码格式

透明背景是由谁实现的？
1. 首先，编码器需要支持alpha通道
支持的带alpha通道编码
Apple ProRes 4444、Animation Codec (QuickTime RLE)，对应的封装格式为mov
vp8、vp9，对应的封装格式为webm
h264不支持alpha通道
2.然后，封装格式要支持响应的编码格式

所以，说webm支持透明是不准确的，其实是因为vp8/vp9支持透明通道，而webm是vp8/vp9的唯一支持的封装格式。

 
 支持alpha通道的视频编码格式以及容器类型汇总 
 
 1、png图像序列，mov、mkv等格式  // 图像
 2、qtrle编码，mov格式  // 文件大，适合简单动画或透明素材的导出
 3、Apple ProRes 4444: rgba 4个通道，mov格式  // 文件大，保留原始信息，适合影视后期和特效合成
 4、vp6a编码，flv、f4v等格式 
 5、vp8、vp9编码，webm格式 // 压缩率高，适合网络
 6、H.265编码，mov格式 // iOS 13及以上版本原生支持HEVC(h.265)编码的视频，包括透明通道
