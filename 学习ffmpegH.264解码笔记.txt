ffmpeg是一个编解码库，功能丰富，其自带H.264解码功能，但是要实现H.264编码需要集成X264将其作为编码器。

H.264解码器概述

解析（Parser）
解析H.264码流中的一些信息，解析NALU，然后解析（SEI、SPS、PPS、Slice Header）
熵解码（Entropy Decoding）
读取码流数据并且进行CABAC或者CAVLC熵解码
解码（Decode）
通过帧内预测、帧间预测、DCT反变换等方法解码压缩数据
环路滤波（Loop Filter）
对解码后的数据进行滤波，去除方块效应
将解码后的一个H264Picture结构体转换为一个AVFrame结构体

解析详解

解析的目的是输出一个完整的帧数据。
如果还没有解析过一帧就先从SPS、PPS、SEI中解析附加信息
如果是完整的一帧就直接储存
如果不是完整的一帧（一个完整的帧被编为多个slice的时候）就通过起始码找到完整的一帧

熵解码详解
“熵解码”部分的作用就是按照H.264语法和语义的规定，读取数据（宏块类型、运动矢量、参考帧、残差等）并且赋值到FFmpeg H.264解码器中相应的变量上。具体说来就是完成了解析H.264码流中Slice Data的功能。
（1）解析Skip类型宏块
（2）获取mb_type
（3）填充当前宏块左边和上边宏块的信息（后面的预测中会用到）
（4）根据mb_type的不同，分成三种情况进行预测工作：
a)宏块是帧内预测
i.如果宏块是Intra4x4类型，则需要单独解析帧内预测模式。
ii.如果宏块是Intra16x16类型，则不再做过多处理。

B)帧间预测Inter-宏块划分为4个8x8块（此时每个8x8的块可以再次划分为4种类型）
这个时候每个8x8的块可以再次划分为8x8、8x4、4x8、4x4几种子块。需要分别处理这些小的子块：
i.解析子块的参考帧序号
ii.解析子块的运动矢量

C)帧间预测Inter-其它类型（包括16x16，16x8，8x16几种划分，这些划分不可再次划分）
这个时候需要判断宏块的类型为16x16，16x8还是8x16，然后作如下处理：
i.解析子宏块的参考帧序号
ii.解析子宏块的运动矢量
（5）解码残差信息
（6）将宏块的各种信息输出到整个图片相应的变量中

解码详解
“宏块解码”就是根据前一步骤“熵解码”得到的宏块类型、运动矢量、参考帧、DCT残差数据等信息恢复图像数据的过程。
通过系统的参数（例如颜色位深是不是8bit，YUV采样格式是不是4：4：4等）判断该调用哪一个函数作为解码函数。

1）预测
a)如果是帧内预测宏块（Intra），调用hl_decode_mb_predict_luma()进行帧内预测，得到预测数据。
帧内预测有两种宏块，16x16和4x4
16x16有四种预测模式
4x4有9种预测模式
b)如果不是帧内预测宏块（Inter），调用FUNC(hl_motion_420)()或者FUNC(hl_motion_422)()进行帧间预测（即运动补偿），得到预测数据。
首先找到当前宏块的匹配块的整像素位置，然后在该位置的基础上进行四分之一像素的内插，并将结果输出出来。
由于H.264解码器中只提供了正方形块的四分之一像素运动补偿函数，所以如果子宏块不是正方形的（例如16x8，8x16），就需要先将子宏块划分为正方形的方块，然后再进行两次运动补偿（两个正方形方块之间的位置关系用delta变量记录）。
根据参考帧的方向有单向预测与双向预测，另外还有一种加权预测方式。
在运动估计的过程中，不仅仅只可以选择一个图像作为参考帧（P帧），而且还可以选择两张图片作为参考帧（B帧）。使用一张图像作为参考帧称为单向预测，而使用两张图像作为参考帧称为双向预测。使用单向预测的时候，直接将参考帧上的匹配块的数据“搬移下来”作后续的处理（“赋值”），而使用双向预测的时候，需要首先将两个参考帧上的匹配块的数据求平均值（“求平均”），然后再做后续处理。

（2）残差叠加
a)调用hl_decode_mb_idct_luma()对DCT残差数据进行反量化、DCT反变换，获得残差像素数据并且叠加到之前得到的预测数据上，得到最后的图像数据。DCT反变换”和“叠加”两个步骤是同时完成的

环路滤波详解
环路滤波是在解码一行宏块之后进行的
一个宏块内部的滤波顺序是首先对垂直边界进行滤波，然后对水平边界进行滤波。垂直边界滤波按照从左到右的顺序进行，而水平边界的滤波按照从上到下的顺序进行。
（1）读取QP等几个参数，用于推导滤波门限值alpha，beta。
（2）如果是帧内宏块（Intra），作如下处理：
a)对于水平的边界，调用filter_mb_edgeh()进行滤波。
b)对于垂直的边界，调用filter_mb_edgev()进行滤波。
帧内宏块滤波过程中，对于在宏块边界上的边界（最左边的垂直边界和最上边的水平边界），采用滤波强度Bs为4的滤波；对于其它边界则采用滤波强度Bs为3的滤波。
（3）如果是其他宏块，作如下处理：
a)对于水平的边界，调用filter_mb_edgeh()进行滤波。
b)对于垂直的边界，调用filter_mb_edgev()进行滤波。
此类宏块的滤波强度需要另作判断。





