参考：https://segmentfault.com/a/1190000019963229

chrome性能分析工具可以用来分析网页在某一时间段内的cpu使用情况，帧速率，网络使用情况。

最上面的预览层：
从总体了反应了这段时间内的帧速率，cpu占用，网络使用和js堆（内存）的使用大小，其中x轴代表时间。

下面的详情层：
1.在帧（Frames）中可以查看每一帧的渲染细节。
空闲帧时间：页面没有任何改变的时间
2.在主线程（Main)中可以查看在cpu中执行的任务，x 轴代表着这段时间内的记录，每一个 Bar 都代表了一个事件。Bar 越宽，意味着该活动花费的时间更长。y轴表示调用堆栈，当你看到事件堆叠在一起时，这意味着上面的事件导致了下面的事件。
如果事件bar的右上角有个红色角，表示改事件可能引起了性能问题，需要重点查看。
在页面渲染过程中可以发现，很多事件最后调用的是编译代码事件，其实就是调用栈找到最后被调用的函数后开始执行的过程。
3。在GPU中查看GPU的使用。
4.还有其他的一些功能详情。

最下面的摘要层：

当在详情层选择了不同的详情查看事，摘要层会以图表的形式显示统计结果，如果是事件的摘要则会显示事件触发位置，这一点很重要，可以定位影响性能的代码位置。

除了摘要外，这一层还记录了事件的一些调用记录和事件日志


WASD可以控制选择区域的放大缩小和左右移动


什么是强制回流
在改变了样式后立即去读取dom的computed样式或者layout属性（比如el.style.backgroundImage或者el.offsetWidth），会强制浏览器提前执行布局。