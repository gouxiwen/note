1. 堆快照分析
记录当前堆内存的占用情况
摘要视图：
构造函数：
所有内部构造函数和自定义构造函数以及一些特殊类别(system)、(complied code)等
距离：
距离GC根的层级
浅层大小：
对象本身大小
保留大小:
对象本身加上依赖对象的大小
GC跟：
window对象和document对象
任何无法从GC根到达的内容都会被 GC
查看引用：
点击构造函数下面创建的对象可以在下面的保留器中查看该对象被应用的情况

对比视图：
分析内存泄漏
拍着两张快照进行对比，找到内存增长的对象，然后在保留器中追踪被哪里引用

控制视图:
通过全局对象出发，一层一层往下探索，从而了解内存的详细情况

2. 分配时间轴
在一段时间内持续地记录内存分配（约每 50 毫秒打一张堆快照），记录完成后可以选择查看任意时间段的内存分配详情。
时间轴中主要的 3 种线：
细横线：内存分配大小刻度线
蓝色竖线：表示内存在对应时刻被分配，最后仍然活跃
灰色竖线：表示内存在对应时刻被分配，但最后被回收

3. 分配采样（开销小，可以长时间记录，记录函数调用）
通过分配采样我们可以很直观地看到代码中的每个函数（API）所分配的内存大小。
由于是采样的方式，所以结果并非百分百准确，即使每次执行相同的操作也可能会有不同的结果，但是足以让我们了解内存分配的大体情况。
三种视图：
图表
扁平
树状
点击函数可以跳转到对应代码

参考：https://www.sohu.com/a/444646047_120052091